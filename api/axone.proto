syntax = "proto3";
package api ;

option go_package = "grpc/gen" ;

service Axone {
    rpc SendNewTicket(NewTicketRequest) returns (NewTicketResponse);
    rpc SendAttachment(stream AttachmentRequest) returns (AttachmentResponse);
    rpc ListRequesterTickets(ListRequesterTicketsRequest) returns (ListRequesterTicketsResponse);

    rpc ListAgentTickets(AgentTicketsListRequest) returns (AgentTicketsListResponse);

    rpc Subscribe(NotificationRequest) returns (stream NotificationResponse);
    rpc Unsubscribe(NotificationRequest) returns (NotificationResponse);

    rpc Login(LoginRequest) returns (LoginResponse);
}

message AttachmentRequest {
    oneof data {
        AttachmentInfo info = 1;
        bytes chunk_data = 2;
      };
}

message AttachmentResponse {
    string ticketID = 1;
    uint32 size = 2;
  }
  

message AttachmentInfo{
	string uploadedName = 1;
	uint32 size          = 2;
	string mimeType     = 3;
	//string storageName  = 4;
	string ticketID     = 5;
}

message NewTicketRequest {
    string ticketID  = 1;
    string subject     = 2;
    string request  = 3;
    string type      = 4;
    string requesterID = 5;
}

message NewTicketResponse {
    string ID = 1;
}

message Ticket {
    string subject           = 1;      
	string request           = 2;      
	string answer            = 3;      
	string requesterID       = 4;
    string requesterLogin    = 5;
    string requesterEmail    = 6;
    string requesterFullName = 7;
	string status            = 8;   
	string type              = 9;    
	string priority          = 10;
	uint32 rate              = 11;   
    uint64 createdAt         = 12; 
    uint64 UpdatedAt         = 13;
}

message AgentTicketsListRequest {
    string status       = 1;   
	string type         = 2;    

} 

message AgentTicketsListResponse {
    repeated Ticket tickets = 1; 
}

message NotificationRequest {
    string id = 1;
}

message NotificationResponse {
    string message = 1;
    int64 time     = 2;
}

message LoginRequest {
    string login = 1;
    string password = 2;
}

message LoginResponse {
    string userID    = 1;  
	string login     = 2;
	string password  = 3;
	string email     = 4;
	string firstName = 5;
	string lastName  = 6;

}

message ListRequesterTicketsRequest {
    string requesterID  = 1;
    string ticketStatus = 2; 
}

message ListRequesterTicketsResponse {
    repeated Ticket tickets = 1;
}